---
- name: Install MetalLB
  block:
    - name: Check if Kubernetes API server is accessible
      shell: |
        kubectl cluster-info
      register: api_server_check
      failed_when: api_server_check.rc != 0
    - name: Apply MetalLB manifest
      shell: |
        kubectl apply -f "{{ metallb_manifest }}"
      when: api_server_check.rc == 0
    - name: Wait for MetalLB pods to be running
      shell: |
        kubectl get pods -n metallb-system -o jsonpath='{.items[*].status.phase}' | grep -qv Running && exit 1 || exit 0
      register: result
      until: result.rc == 0
      retries: 30
      delay: 15
      when: api_server_check.rc == 0
    - name: Check for changes in kube-proxy configmap
      shell: |
        kubectl get configmap kube-proxy -n kube-system -o yaml | \
        sed -e "s/strictARP: false/strictARP: true/" | \
        kubectl diff -f - -n kube-system
      register: diff_result
      when: api_server_check.rc == 0
      ignore_errors: true
    - name: Apply changes to kube-proxy configmap
      shell: |
        kubectl get configmap kube-proxy -n kube-system -o yaml | \
        sed -e "s/strictARP: false/strictARP: true/" | \
        kubectl apply -f - -n kube-system
      when: diff_result.rc != 0
    - name: Create MetalLB namespace, IP pool and L2Advertisement
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: Namespace
        metadata:
          name: metallb-system
        ---
        apiVersion: metallb.io/v1beta1
        kind: IPAddressPool
        metadata:
          name: metallb-pool
          namespace: metallb-system
        spec:
          addresses:
          - "{{ metallb_ip_range }}"
        ---
        apiVersion: metallb.io/v1beta1
        kind: L2Advertisement
        metadata:
          name: l2-advert
          namespace: metallb-system
        EOF
      when: api_server_check.rc == 0
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  when: "'k8s_master' in group_names"